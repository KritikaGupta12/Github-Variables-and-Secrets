name: Creating MySQL db using variables

on: [workflow_dispatch]

jobs:
  job-with-mysql-8_0:
    runs-on: ubuntu-20.04
    environment: dev
    
# setting up environment variables
    env:
    # these variables are user defined
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: foo
      MYSQL_USER: user1
      MYSQL_PASSWORD: user1_password
      NEW_DATABASE: new_db

# configuring a mysql db using containers
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306

        # accessing the variables
        env:
        # here MYSQL_ROOT_PASSWORD etc are predefined for the image container
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}

        # options are o check that whether the db is up and running or not
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Show Docker containers
        run: docker ps -a   # ps is to list all the processes

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            mysqladmin --protocol=tcp -h localhost -P 3306 -u root -p${{ env.MYSQL_ROOT_PASSWORD }} ping &> /dev/null && break
            echo "MySQL is not ready yet... retrying in 2 seconds."
            sleep 2
          done

      - name: Create Database and Grant Full Permissions to User1
        run: |
          # we need to mention protocol,localhost, -p password - do not give any space after the -p, then the command 
          mysql --protocol=tcp -h localhost -P 3306 -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${NEW_DATABASE};"
          mysql --protocol=tcp -h localhost -P 3306 -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -e "CREATE USER IF NOT EXISTS '${{ env.MYSQL_USER }}'@'%' IDENTIFIED BY '${{ env.MYSQL_PASSWORD }}';"
          mysql --protocol=tcp -h localhost -P 3306 -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON ${NEW_DATABASE}.* TO '${{ env.MYSQL_USER }}'@'%'; FLUSH PRIVILEGES;"

      - name: Create Table and Insert Data
        run: |
          mysql --protocol=tcp -h localhost -P 3306 -u ${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }} ${NEW_DATABASE} -e "CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50));"
          mysql --protocol=tcp -h localhost -P 3306 -u ${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }} ${NEW_DATABASE} -e "INSERT INTO users (name) VALUES ('Alice'), ('Bob');"
          mysql --protocol=tcp -h localhost -P 3306 -u ${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }} ${NEW_DATABASE} -e "INSERT INTO users (name) VALUES ('James'), ('Morgan');"

      - name: Query Data
        run: |
          mysql --protocol=tcp -h localhost -P 3306 -u ${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }} ${NEW_DATABASE} -e "SELECT * FROM users;"
